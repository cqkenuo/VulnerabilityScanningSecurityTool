#ifndef GSHARED_H
#define GSHARED_H

#include "shared_define.h"
#include <qdebug.h>



#include "thread_scanport.h"



/*****************
 * 执行python脚本后的返回值
 ****************/
#define POCENV_CHECKED_EXIST    "0"
#define POCENV_CHECKED_NO_EXIST "1"
#define POCENV_CHECKED_NO_ENV   255
#define PYTHON_ERROR            -1


class GShared
{
public:
    // 扫描端口线程
    static THREAD_SCANPORT scan_port_thread;
public:
    GShared();
    // 程序当前路径
    static QString program_path;

    // python2的路径
    static QString python2_path;
    // python2的路径
    static QString python3_path;
    
    // 全局poc配置文件[gconfig.xml]
    static QString poc_xml_file;
    // ip列表文件
    // 程序目录/ipslist
    static QString program_ipslist_file;

    // 程序目录下 poc文件夹
    static QString program_poc_path;
    static QString program_exp_dir;
    // config.json所在的路径
    static QString program_poc_lib_configjson_file;
    
    // 程序目录下，innertools文件夹
    static QString program_tools;

    // 程序目录下，logs文件夹
    static QString program_logs;

    // POC列表 表头
    static QString poc_list_widget_title;

    static QFont ubuntu_font;


    // 菜单列表的各种图标
    static QIcon menu_icon_main_normal;
    static QIcon menu_icon_main_clicked;
    static QIcon menu_icon_editIP_normal;
    static QIcon menu_icon_editIP_clicked;
    static QIcon menu_icon_console_normal;
    static QIcon menu_icon_console_clicked;
    static QIcon menu_icon_setting_normal;
    static QIcon menu_icon_setting_clicked;

/*
    用于保存解析[config.xml]的结果
    config.xml主要记录了筛选时[操作系统][中间件][是否cms]的选项，以及所有poc的信息
*/
    static QStringList sys_filter_list;     
    static QStringList app_filter_list;
    static QStringList cms_filter_list;

    static QList<POC> filter_poc_list;              // 保存xml中解析出来的POC信息，这个是全的
    static QList<POC> filter_poc_selected_list;     // 保存经过用户筛选后的POC，执行检测时，就用这个链表。

    // 保存有漏洞的poc
    static QList<VULNERABILITY_INFO> filter_poc_exist_vulnerability;


    


    // 初始化一些参数
    // 主要获取当前程序的路径
    static void init_gshared();

    // 如果当前程序的路径大于150个字节返回false；
    // 否则返回true。
    // 用于检查程序所在的路径是否过深。
    // 如果过深的话，就无法修改pip.exe中的python路径。
    static bool check_path_lenth(QWidget* widget);

    // 修复python2中pip.exe中关于python的路径
    static void modify_python2pipexe_file();
    // 修复python3中pip.exe中关于python的路径
    static void modify_python3pipexe_file();

    static QString get_datatime();

    static QString GShared::getHostIpAddress();

    static void start_scan_port_thread();

    
private:
    static QString loadFontFamilyFromFiles(const QString &fontFileName);
};

#endif // GSHARED_H
