#!/usr/local/env python3
# coding: utf-8
# author: Mr.zhang
# data: 2020-04-29
# 多线程目标主机端口探测 并实现写入文件

"""
思路分析：
    1、接收参数  python ip dir+port\ip 0 (可选参数，如果为空默认列表，多不为空解析字符串  1-1000) count(线程数默认为10)
"""

import optparse
import socket
import sys
import threading
import Queue
import time


class PortScanner(threading.Thread):
    
    def __init__(self, ip, port_queue, fileobj):
        threading.Thread.__init__(self)
        self.ip = ip
        self.port_queue = port_queue
        self.lock = threading.Lock()
        self.fileobj = fileobj 

    def run(self):
        while not self.port_queue.empty():
            port = self.port_queue.get()
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.settimeout(0.1)
            self.lock.acquire()
            ret = s.connect_ex((self.ip, port))
            if ret == 0:
                self.fileobj.write(str(port) + '\n')
                print('NISOPORTST'+ str(self.ip) + ' ' + str(port)+'NISOPORTED')
            self.lock.release()
            time.sleep(0.1)
       
def main():
    target = sys.argv[1]
    filepath = sys.argv[2] + 'port\{}'.format(target)
    thread_count = int(sys.argv[4])
    fileobj = open(r'{}'.format(filepath), 'w+')
    port_queue = Queue.Queue()
    print("-----------start scanning-----------")
    if sys.argv[3] == '0':
        # 默认通用常规端口扫描
        port_list = [
            21,22,23,25,53,53,80,81,110,111,123,123,135, \
            137,139,161,389,443,445,465,500,515,520,523, \
            548,623,636,873,902,1080,1099,1433,1521,1604, \
            1645,1701,1883,1900,2049,2181,2375,2379,2425, \
            3128,3306,3389,4730,5060,5222,5351,5353,5432, \
            5555,5601,5672,5683,5900,5938,5984,6000,6379,\
            7001,7077,8080,8081,8443,8545,8686,8009,9000,9042,\
            9092,9100,9200,9418,9999,11211,27017,37777,50000,\
            50070,61616
        ]
        
        for port in port_list:
            port_queue.put(port)

        threads = []
        for i in range(thread_count):
            threads.append(PortScanner(target, port_queue, fileobj))

        for i in threads:
            i.start()

        for i in threads:
            i.join()

    else:
        # 用户自定义端口列表的扫描解析
        start = sys.argv[3].split('-')[0]
        end = sys.argv[3].split('-')[1]
        for i in range(int(start), int(end) + 1):
            port_queue.put(i)
        
        threads = []
        for i in range(thread_count):
            threads.append(PortScanner(target, port_queue, fileobj))

        for i in threads:
            i.start()

        for i in threads:
            i.join()

    # 关闭文件
    fileobj.close()


if __name__ == "__main__":
    start = time.time()
    main()
    end = time.time()
    print(end - start)